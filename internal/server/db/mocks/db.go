// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDbInterface is a mock of DbInterface interface.
type MockDbInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDbInterfaceMockRecorder
}

// MockDbInterfaceMockRecorder is the mock recorder for MockDbInterface.
type MockDbInterfaceMockRecorder struct {
	mock *MockDbInterface
}

// NewMockDbInterface creates a new mock instance.
func NewMockDbInterface(ctrl *gomock.Controller) *MockDbInterface {
	mock := &MockDbInterface{ctrl: ctrl}
	mock.recorder = &MockDbInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbInterface) EXPECT() *MockDbInterfaceMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockDbInterface) Ping(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockDbInterfaceMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockDbInterface)(nil).Ping), arg0)
}
